#  Copyright (c) 2017-2018 John Biddiscombe
#
#  Distributed under the Boost Software License, Version 1.0. (See accompanying
#  file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

set(PYCICLE_GITHUB_PROJECT_NAME  "hpx")
set(PYCICLE_GITHUB_ORGANISATION  "STEllAR-GROUP")
set(PYCICLE_GITHUB_BASE_BRANCH   "master")

# CDash server settings
set(PYCICLE_CDASH_PROJECT_NAME   "HPX")
set(PYCICLE_CDASH_SERVER_NAME    "cdash.cscs.ch")
set(PYCICLE_CDASH_HTTP_PATH      "")

# project specific target to build before running tests
set(PYCICLE_CTEST_BUILD_TARGET   "tests")

# ----------------------------------------------
# define build configuration options
# ----------------------------------------------

# ===================
# build type
# ===================
PYCICLE_CMAKE_OPTION(CMAKE_BUILD_TYPE "Debug[D]" "Release[R]")

# ===================
# apex
# ===================
PYCICLE_CMAKE_BOOLEAN_OPTION(HPX_WITH_APEX "A")
PYCICLE_CMAKE_DEPENDENT_OPTION(HPX_WITH_APEX "ON" APEX_WITH_OTF2 "ON[otf]" "OFF[]")
PYCICLE_CMAKE_DEPENDENT_OPTION(HPX_WITH_APEX "ON" HPX_WITH_APEX_NO_UPDATE "ON[]")

# ===================
# cuda
# ===================
PYCICLE_CMAKE_BOOLEAN_OPTION(HPX_WITH_CUDA "Cuda")

# ===================
# C++ language
# ===================
PYCICLE_CMAKE_OPTION(HPX_CXX_STANDARD "11" "14" "17")
PYCICLE_CMAKE_DEPENDENT_OPTION(HPX_CXX_STANDARD "11"  HPX_WITH_CXX11 "ON[]")
PYCICLE_CMAKE_DEPENDENT_OPTION(HPX_CXX_STANDARD "14"  HPX_WITH_CXX14 "ON[]")
PYCICLE_CMAKE_DEPENDENT_OPTION(HPX_CXX_STANDARD "17"  HPX_WITH_CXX17 "ON[]")
# Cuda build requires c++11
PYCICLE_CMAKE_DEPENDENT_OPTION(HPX_WITH_CUDA "ON" HPX_CXX_STANDARD "11")

# ===================
# assorted options
# ===================
PYCICLE_CMAKE_BOOLEAN_OPTION(HPX_WITH_THREAD_IDLE_RATES "I")
PYCICLE_CMAKE_OPTION(HPX_WITH_NATIVE_TLS "ON[]")

# ===================
# parcelport
# ===================
PYCICLE_CMAKE_BOOLEAN_OPTION(HPX_WITH_NETWORKING "N")

# Default Parcelport settings
PYCICLE_CMAKE_OPTION(HPX_WITH_PARCELPORT_TCP "ON[Pt]")
PYCICLE_CMAKE_OPTION(HPX_WITH_PARCELPORT_MPI "ON[Pm]")
PYCICLE_CMAKE_OPTION(HPX_WITH_PARCELPORT_LIBFABRIC "OFF[]")

# If MPI is enabled
PYCICLE_CMAKE_DEPENDENT_OPTION(HPX_WITH_PARCELPORT_MPI "ON"  HPX_WITH_PARCELPORT_MPI_MULTITHREADED "ON[Mm]" "OFF[]")

# If libfabric is enabled
PYCICLE_CMAKE_DEPENDENT_OPTION(HPX_WITH_PARCELPORT_LIBFABRIC "ON"  HPX_PARCELPORT_LIBFABRIC_WITH_LOGGING              "ON[LFl]" "OFF[]")
PYCICLE_CMAKE_DEPENDENT_OPTION(HPX_WITH_PARCELPORT_LIBFABRIC "ON"  HPX_PARCELPORT_LIBFABRIC_WITH_BOOTSTRAPPING        "ON[LFb]" "OFF[]")
PYCICLE_CMAKE_DEPENDENT_OPTION(HPX_WITH_PARCELPORT_LIBFABRIC "ON"  HPX_PARCELPORT_LIBFABRIC_WITH_PERFORMANCE_COUNTERS "ON[LFp]" "OFF[]")
PYCICLE_CMAKE_DEPENDENT_OPTION(HPX_WITH_PARCELPORT_LIBFABRIC "ON"  HPX_PARCELPORT_LIBFABRIC_ENDPOINT "RDM[]")
PYCICLE_CMAKE_DEPENDENT_OPTION(HPX_WITH_PARCELPORT_LIBFABRIC "ON"  HPX_PARCELPORT_LIBFABRIC_PROVIDER "sockets[LFs]")

# ===================
# tests
# ===================
PYCICLE_CMAKE_OPTION(HPX_WITH_EXAMPLES             "ON[]")
PYCICLE_CMAKE_OPTION(HPX_WITH_TESTS                "ON[]")
PYCICLE_CMAKE_OPTION(HPX_WITH_TESTS_BENCHMARKS     "ON[]")
PYCICLE_CMAKE_OPTION(HPX_WITH_TESTS_EXTERNAL_BUILD "OFF[]")
PYCICLE_CMAKE_OPTION(HPX_WITH_TESTS_HEADERS        "OFF[]")
PYCICLE_CMAKE_OPTION(HPX_WITH_TESTS_REGRESSIONS    "ON[]")
PYCICLE_CMAKE_OPTION(HPX_WITH_TESTS_UNIT           "ON[]")
